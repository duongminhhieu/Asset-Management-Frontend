name: Production CI-CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  workflow_dispatch:

jobs:
  build_and_push:
    name: Build image & push
    runs-on: ubuntu-latest
    permissions:
      statuses: write
      checks: write
      contents: write
      packages: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: "20.x"

      - name: Clean install and build
        run: |
          rm -rf node_modules
          rm -f package-lock.json
          npm install
          npm audit fix
          npm run build

      - name: Run tests
        run: npm run coverage:ci

      - name: Unit Test Results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Production-Unit-Test-Results
          path: ./coverage/test-report/test-report.xml
          reporter: jest-junit

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: "Build Inventory Image"
        run: |
          docker build . --tag ghcr.io/duongminhhieu/asset-frontend:latest
          docker push ghcr.io/duongminhhieu/asset-frontend:latest

      - name: Create Release Tag
        id: create_tag
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = 'v' + new Date().toISOString().split('T')[0] + '-production' + '-' + process.env.GITHUB_RUN_NUMBER;
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${tag}`,
              sha: context.sha
            });
            core.setOutput('tag', tag);

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.tag }}
          release_name: Release ${{ steps.create_tag.outputs.tag }}
