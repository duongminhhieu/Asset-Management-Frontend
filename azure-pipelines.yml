# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - main
  - ci-cd
pr:
  branches:
    include:
      - main
      - ci-cd

pool:
  vmImage: ubuntu-latest

variables:
  # Container registry service connection established during pipeline creation
  imageName: "asset-frontend"
  registryName: "duongminhhieu008"
  appName: "rookies71"
  dockerfilePath: "$(Build.SourcesDirectory)/Dockerfile"
  tag: "$(Build.BuildId)"
  containerRegistry: "asset-docker"

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "20.x"
    displayName: "Install Node.js"

  - script: |
      rm -rf node_modules
      rm -f package-lock.json
      npm install
      npm audit fix
      npm run build
    displayName: "Clean install and build"

  # - script: |
  #     npm run coverage:ci || true
  #   displayName: "Run tests"

  # - task: PublishTestResults@2
  #   displayName: "Publish test results"
  #   inputs:
  #     testResultsFormat: "JUnit"
  #     testResultsFiles: "**/test-report.xml"
  #     mergeTestResults: true
  #     failTaskOnFailedTests: true

  # - task: PublishCodeCoverageResults@1
  #   inputs:
  #     codeCoverageTool: "Cobertura"
  #     summaryFileLocation: "$(Build.SourcesDirectory)/coverage/cobertura-coverage.xml"
  #     pathToSources: "$(Build.SourcesDirectory)"
  #     failIfCoverageEmpty: true

  - task: Docker@2
    displayName: "Build and push an image to container registry"
    inputs:
      command: buildAndPush
      repository: $(registryName)/$(imageName)
      dockerfile: $(dockerfilePath)
      containerRegistry: $(containerRegistry)
      tags: |
        $(tag)
